version: '3.8'

services:
  pms_postgres:
    image: postgres
    container_name: pms_postgres
    environment:
      POSTGRES_DB: sensor_data_db
      POSTGRES_USER: monitoring_service_user
      POSTGRES_PASSWORD: S3cret
    ports:
      - "5432:5432"
    networks:
      - pms_network
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - pms_network


  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pms_network

  iotpmsapplication:
    build: .
    container_name: iotpmsapplication
    networks:
      - pms_network
    depends_on:
      - kafka
      - pms_postgres
    command: sh -c "python monitoring_service.py"
    volumes:
      - ./app:/app

networks:
  pms_network:
    driver: bridge
